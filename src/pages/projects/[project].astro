---
import Layout from "@/layouts/Layout.astro";
import { projects } from "@/mocks/projects";
import {
  ExternalLink,
  ArrowLeft,
  Link,
  ArrowUpRight,
  GalleryHorizontalEnd,
  ChevronDown,
} from "lucide-react";

export function getStaticPaths() {
  return projects.map((project) => ({
    params: { project: project.slug },
  }));
}

const { project } = Astro.params;
const currentProject = projects.find((p) => p.slug === project);
const imagePath = `/assets/projects/${currentProject?.slug}.webp`;
---

<Layout title={currentProject?.title || "proyecto"}>
  <div
    class="container mx-auto py-12 px-4 md:px-6 xl:px-24"
    transition:name={`${currentProject?.slug}-card`}
  >
    <a
      href="/projects"
      class="inline-flex items-center hover:scale-105 transition-all duration-200 text-gray-600 dark:text-gray-200 mb-8"
    >
      <ChevronDown className="mr-1 h-5 w-5" />
      Todos los proyectos
    </a>

    <div class="flex flex-col lg:flex-row gap-6">
      <!-- Sección de imagen -->
      <div class="lg:w-1/2 flex">
        <div class="relative w-full max-w-2xl">
          <!-- Skeleton con z-index mayor para que se muestre sobre la imagen -->
          <div
            class="skeleton animate-pulse absolute w-full h-[50%] shadow-lg z-10"
          >
          </div>
          <img
            src={imagePath}
            alt={currentProject?.title || "Imagen del proyecto"}
            class="rounded-lg shadow-lg w-full h-auto relative z-0"
            onload="this.previousElementSibling.classList.add('hidden')"
            transition:name={`${currentProject?.slug}-image`}
          />
        </div>
      </div>

      <!-- Sección de detalles -->
      <div class="lg:w-1/2 flex flex-col justify-center">
        <h1
          class="text-2xl md:text-3xl lg:text-4xl font-bold text-gray-800 dark:text-gray-200 mb-1"
        >
          {currentProject?.title}
        </h1>
        <p class="text-sm 2xl:text-lg text-gray-600 dark:text-gray-400 mb-4">
          {currentProject?.shortDescription}
        </p>
        <div class="mb-6">
          <h2
            class="text-lg font-semibold text-gray-800 dark:text-gray-200 mb-2"
          >
            Descripción
          </h2>
          <p
            class="text-sm 2xl:text-lg text-balance text-gray-600 dark:text-gray-300"
          >
            {currentProject?.description}
          </p>
        </div>
        <div class="mb-4">
          <h2
            class="text-lg font-semibold text-gray-800 dark:text-gray-200 mb-2"
          >
            Tecnologías
          </h2>
          <div class="flex flex-wrap gap-2">
            {
              currentProject?.skills.map((tag) => (
                <span class="text-xs lg:text-sm text-gray-500 dark:text-gray-200 dark:bg-slate-800 bg-gray-100 px-3 py-1 rounded-full">
                  {tag}
                </span>
              ))
            }
          </div>
        </div>
        {
          currentProject?.url && (
            <a
              href={currentProject?.url}
              target="_blank"
              rel="noopener noreferrer"
              class="inline-flex items-center max-sm:w-full lg:w-1/2 mt-2 justify-center px-6 py-3 bg-slate-600 dark:bg-slate-600 rounded-md hover:bg-slate-700 active:bg-slate-800 dark:hover:bg-slate-700 dark:active:bg-slate-800 text-white transition-colors duration-200"
            >
              Visitar sitio web
              <ArrowUpRight className="mr-2 h-5 w-5" />
            </a>
          )
        }
      </div>
    </div>
  </div>
</Layout>

<style>
  /* Skeleton con animación de pulso */
  .skeleton {
    background: #e2e2e2;
    /* animation: pulse 1.5s ease-in-out infinite; */
  }

  /* @keyframes pulse {
    0% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
    100% {
      opacity: 1;
    }
  } */

  .hidden {
    display: none;
  }
</style>
