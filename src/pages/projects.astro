---
import { getCollection } from "astro:content";
import SkeletonCard from "@/components/SkeletonCard.astro";
import Layout from "@/layouts/Layout.astro";
const projects = await getCollection("projects");
---

<Layout title="Proyectos - JDLSantos">
  <main class="relative lg:h-[calc(100vh-80px)]">
    <div class="image-bg-container">
      <img
        src="/assets/avatar/jump.webp"
        alt="Projects background"
        class="absolute w-64 h-64 right-0 top-0 max-2xl:-translate-y-15 md:-translate-x-75 2xl:translate-x-0 animate-zoom-in"
      />
    </div>
    <div
      class="max-w-7xl mx-auto px-4 py-12"
      transition:name="projects-container"
    >
      <h1 class="text-3xl font-bold text-blue-600 mb-8 ml-4 md:ml-0">
        Proyectos
      </h1>

      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {
          projects.map((project) => {
            const { slug, data } = project
            const { title, description, skills, image } = data
            
            return (
            <a
              href={`/projects/${slug}`}
              class="block  relative group h-full "
              aria-label={`Visita ${title}`}
            >
              <div id={`${slug}-skeleton`}>
                <SkeletonCard />
              </div>

              <div
                class="h-full flex flex-col  transition-all duration-300 overflow-hidden shadow-[0_4px_20px_rgba(0,118,255,0.1)] dark:bg-gradient-to-br dark:from-gray-900 dark:to-gray-800 rounded-lg hover:shadow-[0_8px_30px_rgba(0,118,255,0.2)]"
                transition:name={`${slug}-card`}
                transition:animate="fade"
              >
                {/* Contenedor de imagen con relación de aspecto 16:9 */}
                <div class="w-full aspect-video p-2 flex items-center relative">
                  {/* <div class="skeleton absolute inset-0" /> */}
                  <img
                    transition:name={`${slug}-image`}
                    src={image}
                    alt={title}
                    class="w-full h-full object-contain mx-auto transition-transform duration-300 group-hover:scale-103 rounded-lg"
                    width="800"
                    height="450"
                    loading="lazy"
                    decoding="async"
                    onload={`document.getElementById("${slug}-skeleton").classList.add('hidden')`}
                  />
                </div>

                {/* Contenido de la tarjeta */}
                <div class="flex-1 p-5 flex flex-col dark:bg-linear-to-b dark:from-gray-800 dark:to-gray-900">
                  <h3 class="text-xl font-bold mb-2 line-clamp-2 text-gray-800 dark:text-blue-300 group-hover:text-blue-600 transition-colors duration-200">
                    {title}
                  </h3>
                  <p class="text-gray-600 dark:text-blue-100 mb-4 line-clamp-3 flex-1">
                    {description}
                  </p>
                  <div class="flex flex-wrap gap-2">
                    {skills.slice(0,4).map((tag:string) => (
                      <span
                        class="text-sm px-2.5 py-1 dark:bg-gradient-to-r dark:from-blue-600 dark:to-blue-500 dark:text-gray-100 rounded-full text-gray-600 dark:bg-teal-300 hover:bg-gray-200 transition-colors duration-200"
                        aria-label={`Skill: ${tag}`}
                      >
                        {tag}
                      </span>
                    ))}
                    {skills.length > 4 && (
                      <span class="text-sm px-2.5 py-1 bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-200 rounded-full">
                        +{skills.length - 4} más
                      </span>
                    )}
                  </div>
                </div>
              </div>
            </a>
            )
          })
        }
      </div>
    </div>
  </main>
</Layout>

<style>
  .card-image {
    mask-image: linear-gradient(black 80%, transparent);
  }

  .skeleton {
    background: #c2bcbc;
    animation: pulse 1.5s ease-in-out infinite;
  }

  @keyframes pulse {
    0% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
    100% {
      opacity: 1;
    }
  }

  .hidden {
    display: none;
  }

  /* Mejoras de animación */
  .group:hover .group-hover\:scale-105 {
    transform: scale(1.05);
  }

  /* Mejoras de accesibilidad */
  [aria-label] {
    position: relative;
  }

  [aria-label]::after {
    content: attr(aria-label);
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    white-space: nowrap;
    background: rgba(0, 0, 0, 0.8);
    color: white;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 12px;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.2s;
  }

  [aria-label]:hover::after {
    opacity: 1;
  }
</style>
