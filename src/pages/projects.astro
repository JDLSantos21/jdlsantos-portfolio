---
import { getCollection } from "astro:content";
import SkeletonCard from "@/components/SkeletonCard.astro";
import Layout from "@/layouts/Layout.astro";
import Container from "@/components/core/Container.astro";
import SectionTitle from "@/components/SectionTitle.astro";
import { SkillName } from "@/data/skills";
import SkillBadge from "@/components/ui/SkillBadge.astro";

const allProjects = await getCollection("projects");
// Ordenar proyectos por ID de menor a mayor
const projects = allProjects.toSorted((a, b) => b.data.id - a.data.id);
---

<Layout title="Proyectos - JDLSantos">
  <main class="relative min-h-[calc(100vh-4rem)] md:mt-14 lg:mt-20">
    <Container>
      <!-- Hero Section -->
      <div class="relative px-4 py-16 mx-auto max-w-7xl">
        <!-- Background Avatar -->
        <div class="absolute top-0 right-0 opacity-20 dark:opacity-10">
          <img
            src="/assets/avatar/jump.webp"
            alt="Projects background"
            class="w-48 h-48 lg:w-64 lg:h-64 object-contain animate-bounce-slow"
          />
        </div>

        <!-- Header Content -->
        <div class="relative z-10 mb-12">
          <SectionTitle
            title="Proyectos"
            subtitle="Una colección de mis trabajos más destacados"
            icon="mdi:stack-overflow"
          />

          <!-- Stats -->
          <div class="flex flex-wrap gap-6 mb-8">
            <div
              class="flex items-center gap-3 px-4 py-2 rounded-lg bg-white/40 dark:bg-gray-800/20 backdrop-blur-sm"
            >
              <div class="w-3 h-3 bg-blue-500 rounded-full animate-pulse"></div>
              <span
                class="text-sm font-medium text-gray-700 dark:text-gray-300"
              >
                {projects.length} Proyectos
              </span>
            </div>
          </div>
        </div>

        <!-- Projects Grid -->
        <div class="grid grid-cols-1 gap-8 md:grid-cols-2 lg:grid-cols-3">
          {
            projects.map((project) => {
              const { slug, data } = project;
              const { title, shortDescription, skills, image } = data;

              return (
                <a
                  href={`/projects/${slug}`}
                  class="relative block h-full group"
                  aria-label={`Visita ${title}`}
                >
                  {/* <div id={`${slug}-skeleton`}>
                    <SkeletonCard />
                  </div> */}

                  <div
                    class="h-full flex flex-col transition-all duration-300 overflow-hidden bg-white dark:bg-gray-900 rounded-2xl shadow-lg hover:shadow-xl dark:shadow-gray-900/20 hover:shadow-blue-200/20 dark:hover:shadow-blue-900/20 border border-gray-100 dark:border-gray-800"
                    transition:name={`${slug}-card`}
                  >
                    {/* Contenedor de imagen con relación de aspecto 16:9 */}
                    <div class="relative flex items-center w-full p-4 aspect-video bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-800 dark:to-gray-900">
                      <img
                        transition:name={`${slug}-image`}
                        src={`${image}.webp`}
                        alt={title}
                        class="object-contain w-full h-full mx-auto transition-transform duration-300 rounded-lg group-hover:scale-105"
                        width="800"
                        height="450"
                        loading="lazy"
                        decoding="async"
                      />
                    </div>
                    {/* onload={`document.getElementById("${slug}-skeleton").classList.add('hidden')`} */}

                    {/* Contenido de la tarjeta */}
                    <div class="flex flex-col flex-1 p-6">
                      <h3 class="mb-3 text-xl font-bold text-gray-800 dark:text-white transition-colors duration-200 line-clamp-2 group-hover:text-blue-600 dark:group-hover:text-blue-400">
                        {title}
                      </h3>
                      <p class="flex-1 mb-4 text-gray-600 dark:text-gray-400 line-clamp-3 leading-relaxed">
                        {shortDescription}
                      </p>
                      <div class="flex flex-wrap gap-2">
                        {skills.slice(0, 4).map((skill: SkillName) => (
                          <SkillBadge skill={skill} size="sm" />
                        ))}
                        {skills.length > 4 && (
                          <span class="text-xs px-2 py-1 text-slate-600 dark:text-slate-400 font-medium">
                            +{skills.length - 4} más
                          </span>
                        )}
                      </div>
                    </div>
                  </div>
                </a>
              );
            })
          }
        </div>
      </div>
    </Container>
  </main>
</Layout>

<style>
  .card-image {
    mask-image: linear-gradient(black 80%, transparent);
  }

  .skeleton {
    background: #c2bcbc;
    animation: pulse 1.5s ease-in-out infinite;
  }

  @keyframes pulse {
    0% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
    100% {
      opacity: 1;
    }
  }

  @keyframes bounce-slow {
    0%,
    100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-10px);
    }
  }

  .animate-bounce-slow {
    animation: bounce-slow 3s ease-in-out infinite;
  }

  .hidden {
    display: none;
  }

  /* Mejoras de animación */
  .group:hover .group-hover\:scale-105 {
    transform: scale(1.05);
  }

  /* Mejoras de accesibilidad */
  [aria-label] {
    position: relative;
  }

  [aria-label]::after {
    content: attr(aria-label);
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    white-space: nowrap;
    background: rgba(0, 0, 0, 0.8);
    color: white;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 12px;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.2s;
    z-index: 1000;
  }

  [aria-label]:hover::after {
    opacity: 1;
  }

  /* Mejoras visuales */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
