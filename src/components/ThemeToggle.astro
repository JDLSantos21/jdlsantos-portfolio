---
import { Icon } from "astro-icon/components";
---

<button
  class="theme-toggle p-1 rounded-full transition-all duration-300 ease-in-out
         bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-blue-300
         hover:scale-110
         focus:ring-gray-800 dark:focus:ring-yellow-300 cursor-pointer"
  type="button"
  aria-label="Toggle dark mode"
>
  <div class="relative w-6 h-6">
    <Icon
      name="mdi:theme-light-dark"
      class="absolute inset-0 w-6 h-6 transition-transform duration-300 transform opacity-100 dark:rotate-0 rotate-180"
    />
  </div>
</button>

<script>
  function toggleTheme() {
    // Toggle de la clase dark
    document.documentElement.classList.toggle("dark");

    // Guarda la preferencia en localStorage
    const isDark = document.documentElement.classList.contains("dark");
    localStorage.setItem("theme", isDark ? "dark" : "light");

    // Actualiza el color-scheme
    document.documentElement.style.colorScheme = isDark ? "dark" : "light";
  }

  function setupThemeToggles() {
    // Seleccionar TODOS los botones de toggle por clase
    const themeToggles = document.querySelectorAll(".theme-toggle");

    themeToggles.forEach((toggle) => {
      // Clonar y reemplazar para eliminar event listeners antiguos
      const newToggle = toggle.cloneNode(true);
      if (toggle.parentNode) {
        toggle.parentNode.replaceChild(newToggle, toggle);
      }

      // Agregar evento al nuevo botón
      newToggle.addEventListener("click", toggleTheme);
    });
  }

  // Ejecutar inicialmente
  document.addEventListener("DOMContentLoaded", setupThemeToggles);

  // Ejecutar después de cada transición de página
  document.addEventListener("astro:page-load", setupThemeToggles);
  document.addEventListener("astro:after-swap", setupThemeToggles);
</script>
