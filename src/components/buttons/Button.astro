---
export interface Props {
  variant?:
    | "default"
    | "destructive"
    | "outline"
    | "secondary"
    | "ghost"
    | "link";
  size?: "default" | "sm" | "lg" | "icon";
  type?: "button" | "submit" | "reset";
  disabled?: boolean;
  href?: string;
  target?: string;
  class?: string;
  id?: string;
  ariaLabel?: string;
}

const {
  variant = "default",
  size = "default",
  type = "button",
  disabled = false,
  href,
  target,
  class: className = "",
  id,
  ariaLabel,
  ...rest
} = Astro.props;

// Clases base del botón
const baseClasses =
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-hidden focus-visible:ring-2 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0";

// Variantes de estilo
const variantClasses = {
  default:
    "bg-blue-600 text-white hover:bg-blue-700 dark:bg-blue-500 dark:hover:bg-blue-600",
  destructive:
    "bg-red-600 text-white hover:bg-red-700 dark:bg-red-500 dark:hover:bg-red-600",
  outline:
    "border border-gray-300 bg-transparent text-gray-900 hover:bg-gray-100 dark:border-gray-600 dark:text-gray-100 dark:hover:bg-gray-800",
  secondary:
    "bg-gray-200 text-gray-900 hover:bg-gray-300 dark:bg-gray-700 dark:text-gray-100 dark:hover:bg-gray-600",
  ghost:
    "bg-transparent text-gray-900 hover:bg-gray-100 dark:text-gray-100 dark:hover:bg-gray-800",
  link: "bg-transparent text-blue-600 underline-offset-4 hover:underline dark:text-blue-400",
};

// Tamaños
const sizeClasses = {
  default: "h-10 px-4 py-2",
  sm: "h-9 rounded-md px-3",
  lg: "h-11 rounded-md px-8",
  icon: "h-10 w-10",
};

// Combinar todas las clases
const buttonClasses = `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`;

// Determinar si es un enlace o un botón
const isLink = !!href;
const Component = isLink ? "a" : "button";
---

{
  isLink ? (
    <a
      href={href}
      target={target}
      class={buttonClasses}
      id={id}
      aria-label={ariaLabel}
      {...rest}
    >
      <slot />
    </a>
  ) : (
    <button
      type={type}
      disabled={disabled}
      class={buttonClasses}
      id={id}
      aria-label={ariaLabel}
      {...rest}
    >
      <slot />
    </button>
  )
}

<style>
  /* Estilos adicionales si son necesarios */
  button,
  a {
    cursor: pointer;
    user-select: none;
  }

  button:disabled,
  a:disabled {
    cursor: not-allowed;
  }

  /* Animaciones suaves para hover */
  button,
  a {
    transition: all 0.2s ease-in-out;
  }

  /* Focus styles para accesibilidad */
  button:focus-visible,
  a:focus-visible {
    outline: 2px solid hsl(var(--ring));
    outline-offset: 2px;
  }
</style>
