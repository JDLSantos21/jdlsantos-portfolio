---
import { Icon } from "astro-icon/components";

const skills = {
  Frontend: [
    { name: "TypeScript", icon: "logos:typescript-icon" },
    { name: "JavaScript", icon: "logos:javascript" },
    { name: "React", icon: "logos:react" },
    { name: "Next.js", icon: "logos:nextjs-icon" },
    { name: "Astro", icon: "logos:astro-icon" },
    { name: "Vite", icon: "logos:vitejs" },
    { name: "Zustand", icon: "logos/zustand" },
    { name: "Expo", icon: "logos:expo-icon" },
    { name: "TailwindCSS", icon: "logos:tailwindcss-icon" },
    { name: "Framer Motion", icon: "logos:framer" },
    { name: "TanStack (RQ)", icon: "logos:react-query-icon" },
    { name: "Zod", icon: "simple-icons:zod" },
    { name: "Dayjs", icon: "logos/dayjs" },
    { name: "MomentJS", icon: "logos:momentjs" },
    { name: "HTML", icon: "logos:html-5" },
    { name: "CSS", icon: "logos:css-3" },
  ],
  Backend: [
    { name: "Node.js", icon: "logos:nodejs-icon" },
    { name: "Express.js", icon: "simple-icons:express" },
    { name: ".NET", icon: "logos:dotnet" },
    { name: "MySQL", icon: "logos:mysql-icon" },
    { name: "PostgreSQL", icon: "logos:postgresql" },
    { name: "WebSockets", icon: "mdi:web" },
    { name: "API RESTful", icon: "mdi:api" },
    { name: "JsonWebTokens", icon: "logos:jwt-icon" },
  ],
  Fullstack: [
    { name: "Tauri", icon: "logos:tauri" },
    { name: "Postman", icon: "logos:postman-icon" },
    { name: "Axios", icon: "logos:axios" },
    { name: "Git", icon: "logos:git-icon" },
    { name: "Vitest", icon: "logos:vitest" },
    { name: "Playwright", icon: "logos:playwright" },
    { name: "npm", icon: "logos:npm-icon" },
    { name: "pnpm", icon: "logos:pnpm" },
    { name: "Warp", icon: "simple-icons:warp" },
    { name: "Markdown", icon: "mdi:markdown" },
  ],
};
---

<!-- src/components/SkillGrid.astro -->
<section class="skills-section">
  <h2
    class="skills-section__title font-semibold flex items-center gap-1 justify-center mt-36"
  >
    <Icon class="text-blue-600" name="mdi:code-tags" />
    <span class="text-gray-600 dark:text-gray-200">Habilidades</span>
  </h2>
  <p
    class="skills-section__description text-2xl lg:text-4xl text-center mb-10 font-bold"
  >
    Aquí están algunas de las tecnologías con las que trabajo.
  </p>
  <!-- Grid layout: Frontend (izquierda, 2 filas), Backend y Fullstack (derecha, apilados) -->
  <div class="max-w-7xl mx-auto px-4">
    <div
      class="grid grid-cols-1 lg:grid-cols-2 grid-rows-1 lg:grid-rows-2 gap-4 h-auto"
    >
      <!-- Frontend - Columna izquierda, ocupa 2 filas -->
      <div class="row-span-1 lg:row-span-2 skills-section__category group">
        <div
          class="bg-white/70 dark:bg-gray-900/70 backdrop-blur-sm border border-gray-200/50 dark:border-gray-700/50 rounded-2xl p-4 shadow-lg hover:shadow-xl transition-all duration-300 h-full overflow-hidden"
        >
          <h3
            class="skills-section__category-title text-xl font-bold text-center mb-4 text-gray-800 dark:text-gray-100 flex items-center justify-center gap-2"
          >
            <div
              class="w-2 h-2 rounded-full bg-gradient-to-r from-blue-500 to-purple-500"
            >
            </div>
            Frontend
            <div
              class="w-2 h-2 rounded-full bg-gradient-to-r from-purple-500 to-pink-500"
            >
            </div>
          </h3>
          <div
            class="skills-section__grid grid grid-cols-3 sm:grid-cols-4 md:grid-cols-5 lg:grid-cols-4 xl:grid-cols-5 gap-1.5 overflow-hidden"
          >
            {
              skills.Frontend.map(({ name, icon }) => (
                <div class="skills-section__item">
                  <div class="relative bg-white dark:bg-gray-800 rounded-lg p-2 border border-gray-100 dark:border-gray-700 overflow-hidden">
                    {/* Content */}
                    <div class="relative flex flex-col items-center justify-center min-h-[45px] text-center">
                      <div class="mb-1">
                        <Icon
                          name={icon}
                          class="skills-section__item-icon w-5 h-5 text-gray-700 dark:text-gray-300"
                        />
                      </div>
                      <span class="skills-section__item-name text-[10px] font-medium text-gray-800 dark:text-gray-200 leading-tight line-clamp-2">
                        {name}
                      </span>
                    </div>
                  </div>
                </div>
              ))
            }
          </div>
        </div>
      </div>

      <!-- Backend - Columna derecha, primera fila -->
      <div class="skills-section__category group">
        <div
          class="bg-white/70 dark:bg-gray-900/70 backdrop-blur-sm border border-gray-200/50 dark:border-gray-700/50 rounded-2xl p-4 shadow-lg hover:shadow-xl transition-all duration-300 h-full overflow-hidden"
        >
          <h3
            class="skills-section__category-title text-xl font-bold text-center mb-4 text-gray-800 dark:text-gray-100 flex items-center justify-center gap-2"
          >
            <div
              class="w-2 h-2 rounded-full bg-gradient-to-r from-blue-500 to-purple-500"
            >
            </div>
            Backend
            <div
              class="w-2 h-2 rounded-full bg-gradient-to-r from-purple-500 to-pink-500"
            >
            </div>
          </h3>
          <div
            class="skills-section__grid grid grid-cols-3 sm:grid-cols-4 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-4 gap-1.5 overflow-hidden"
          >
            {
              skills.Backend.map(({ name, icon }) => (
                <div class="skills-section__item">
                  <div class="relative bg-white dark:bg-gray-800 rounded-lg p-2 border border-gray-100 dark:border-gray-700 overflow-hidden">
                    {/* Content */}
                    <div class="relative flex flex-col items-center justify-center min-h-[45px] text-center">
                      <div class="mb-1">
                        <Icon
                          name={icon}
                          class="skills-section__item-icon w-5 h-5 text-gray-700 dark:text-gray-300"
                        />
                      </div>
                      <span class="skills-section__item-name text-[10px] font-medium text-gray-800 dark:text-gray-200 leading-tight line-clamp-2">
                        {name}
                      </span>
                    </div>
                  </div>
                </div>
              ))
            }
          </div>
        </div>
      </div>

      <!-- Fullstack - Columna derecha, segunda fila -->
      <div class="skills-section__category group">
        <div
          class="bg-white/70 dark:bg-gray-900/70 backdrop-blur-sm border border-gray-200/50 dark:border-gray-700/50 rounded-2xl p-4 shadow-lg hover:shadow-xl transition-all duration-300 h-full overflow-hidden"
        >
          <h3
            class="skills-section__category-title text-xl font-bold text-center mb-4 text-gray-800 dark:text-gray-100 flex items-center justify-center gap-2"
          >
            <div
              class="w-2 h-2 rounded-full bg-gradient-to-r from-blue-500 to-purple-500"
            >
            </div>
            Fullstack
            <div
              class="w-2 h-2 rounded-full bg-gradient-to-r from-purple-500 to-pink-500"
            >
            </div>
          </h3>
          <div
            class="skills-section__grid grid grid-cols-3 sm:grid-cols-4 md:grid-cols-3 lg:grid-cols-5 xl:grid-cols-5 gap-1.5 overflow-hidden"
          >
            {
              skills.Fullstack.map(({ name, icon }) => (
                <div class="skills-section__item">
                  <div class="relative bg-white dark:bg-gray-800 rounded-lg p-2 border border-gray-100 dark:border-gray-700 overflow-hidden">
                    {/* Content */}
                    <div class="relative flex flex-col items-center justify-center min-h-[45px] text-center">
                      <div class="mb-1">
                        <Icon
                          name={icon}
                          class="skills-section__item-icon w-5 h-5 text-gray-700 dark:text-gray-300"
                        />
                      </div>
                      <span class="skills-section__item-name text-[10px] font-medium text-gray-800 dark:text-gray-200 leading-tight line-clamp-2">
                        {name}
                      </span>
                    </div>
                  </div>
                </div>
              ))
            }
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  import gsap from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

  const skillsCategories = document.querySelectorAll(
    ".skills-section__category"
  );

  skillsCategories.forEach((category, index) => {
    const skillsItems = category.querySelectorAll(".skills-section__item");
    const categoryTitle = category.querySelector(
      ".skills-section__category-title"
    );

    // Set initial states
    gsap.set(categoryTitle, { opacity: 0, y: -20 });
    gsap.set(skillsItems, { opacity: 0, y: 40, scale: 0.9 });

    ScrollTrigger.create({
      trigger: category,
      start: "top 90%",
      end: "bottom 20%",
      onEnter: () => {
        // Animate category title first
        gsap.to(categoryTitle, {
          opacity: 1,
          y: 0,
          duration: 0.6,
          ease: "power3.out",
        });

        // Then animate skill items with stagger
        gsap.to(skillsItems, {
          opacity: 1,
          y: 0,
          scale: 1,
          duration: 0.8,
          stagger: {
            amount: 0.8,
            from: "start",
            ease: "power2.out",
          },
          ease: "back.out(1.2)",
          delay: 0.2,
        });
      },
      onLeaveBack: () => {
        gsap.to([categoryTitle, ...skillsItems], {
          opacity: 0,
          y: index % 2 === 0 ? -30 : 40,
          scale: 0.9,
          duration: 0.5,
          stagger: {
            amount: 0.2,
            from: "end",
            ease: "power2.in",
          },
          ease: "power2.in",
        });
      },
    });
  });
</script>
